// -----------------------------------------------------------------------------
// This file contains CSS helper classes.
// -----------------------------------------------------------------------------

/**
 * Clear inner floats
 */
.clearfix::after {
  clear: both;
  content: '';
  display: table;
}


/**
 * Hide text while making it readable for screen readers
 * 1. Needed in WebKit-based browsers because of an implementation bug;
 *    See: https://code.google.com/p/chromium/issues/detail?id=457146
 */
.hide-text {
  overflow: hidden;
  padding: 0; /* 1 */
  text-indent: 101%;
  white-space: nowrap;
}

/**
 * Hide element while making it readable for screen readers
 * Shamelessly borrowed from HTML5Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133
 */
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}


$base-size: 16;

@function rem($target, $context: $base-size) {
  @return ($target / $context) * 1em;
}

@mixin background($bg, $position:'center'){
  background-image:url($bg);
  background-size:cover;
        background-position: $position;
  background-repeat: no-repeat;
}

@mixin position-top-0-left-0{
  position: absolute;
  left: 0;
  top: 0;
}

@mixin size-boxed{
  width: 100%;
  height:100%;
}

@mixin font($font-size, $font-weight:500,$line-height:1.7,$font-family:'Lato'){
  font-size: rem($font-size);
  font-weight: $font-weight;
  line-height: $line-height;
  font-family: $font-family;
}

@mixin btn-background($bg){
    background-color: $bg;
    
        &:hover{
                @if $bg == #ffffff {
           background-color: $primary-color;
                    color:$bg;
        
    } @else{
           background-color: darken($bg, 30%);
        
    }

        }

}

.py-100{
	padding-top:100px;
	padding-bottom: 100px;
}

$spaceamounts: (5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 120, 125, 130, 150, 200, 250); // Adjust this to include the pixel amounts you need.
$sides: (top, bottom, left, right); // Leave this variable alone

@each $space in $spaceamounts {
  @each $side in $sides {
    .spec-m#{str-slice($side, 0, 1)}-#{$space} {
      margin-#{$side}: #{$space}px !important;
    }
  
    .spec-p#{str-slice($side, 0, 1)}-#{$space} {
      padding-#{$side}: #{$space}px !important;
    }
  }
}